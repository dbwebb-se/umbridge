---
-   name: Install packages
    apt:
        name: "{{ packages }}"
        state: present



-   name: Check if certificate already exists.
    stat:
        path: /etc/letsencrypt/live/{{ item }}/cert.pem
    with_items:
        - "{{ domain_name }}"
        - "{{ sentry_domain_name }}"
    register: letsencrypt_cert



-   debug: msg="{{ letsencrypt_cert }}"

-   name: Create list with if certs exist
    set_fact:
        missing_certs: "{{ letsencrypt_cert.results | selectattr('stat.exists', '==', false) | map(attribute='item') | list }}"

-   debug: msg="{{ missing_certs }}"


-   name: Stop services to allow certbot to generate a cert.
    command: service nginx stop
    when: missing_certs | length > 0


-   name: Generate new certificate if one doesn't exist. DRY RUN
    shell: "certbot certonly --dry-run --standalone --noninteractive --expand --agree-tos --email {{ admin_email }} -d {{ item }} -d www.{{ item }}"
    when: missing_certs | length > 0
    with_items: "{{ missing_certs }}"
    register: dry_run

-   debug: msg="{{ dry_run }}"

-   name: Create a string from the list
    set_fact:
        dry_run_ok: "{{ dry_run.results | selectattr('rc', '==', 0) | list }}"


Har inte testat denna. Körde det manuellt och efter det skippades den.
-   name: Generate new certificate if one doesn't exist.
    shell: "certbot certonly --standalone --noninteractive --expand --agree-tos --email {{ admin_email }} -d {{ item }} -d www.{{ item }}"
    when: missing_certs | length > 0 and dry_run_ok | length == missing_certs | length 
    with_items: "{{ missing_certs }}"



-   name: Remove default conf
    file:
        state: absent
        path: /etc/nginx/sites-enabled/default



-   name: Template nginx site config to server
    template:
        src: "{{ item }}.j2"
        dest: "/etc/nginx/sites-available/{{ item }}"
    with_items: "{{ configurations }}"



-   name: Link site to enabled
    file:
        state: link
        force: yes
        src: "/etc/nginx/sites-available/{{ item }}"
        path: "/etc/nginx/sites-enabled/{{ item }}"
    with_items: "{{ configurations }}"



-   name: Start services after cert has been generated.
    command: service nginx restart


# Lägg till att renew domain, https://stackoverflow.com/a/62922373
# /etc/systemd/system/certbot.service
# [Unit]
# Description=Certbot Renewal
# [Service]
# ExecStart=/usr/bin/certbot -q renew --pre-hook "sudo systemctl stop nginx" --post-hook "sudo systemctl start nginx"